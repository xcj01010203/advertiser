package com.xiaotu.advertiser.project.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.xiaotu.advertiser.project.controller.dto.PlayRoundDto;
import com.xiaotu.advertiser.project.model.ProjectModel;
import com.xiaotu.advertiser.project.service.PlayRoundService;
import com.xiaotu.common.util.SessionUtil;

/**
 * 场次信息
 * @author xuchangjian 2017年6月21日下午3:38:45
 */
@RestController
@RequestMapping("/playRound")
public class PlayRoundController {

	@Autowired
	private PlayRoundService playRoundService;
	
	/**
	 * 获取项目中剧本集场号列表
	 * @author xuchangjian 2017年6月23日上午9:22:36
	 * @return
	 */
	@RequestMapping("/querySeriesRoundNos")
	public Object querySeriesRoundNos()
	{
		return this.playRoundService.querySeriesRoundNos();
	}

	/**
	 * 获取集次列表
	 * @author xuchangjian 2017年6月29日下午6:25:50
	 * @return
	 */
	@RequestMapping("/querySeriesNoList")
	public Object querySeriesNoList()
	{
		return this.playRoundService.querySeriesNoList();
	}
	
	/**
	 * 查询场次详细信息
	 * @author xuchangjian 2017年6月23日下午12:11:46
	 * @param roundId
	 * @return
	 */
	@RequestMapping("/queryRoundDetail")
	public Object queryRoundDetail(String roundId)
	{
		return this.playRoundService.queryRoundDetail(roundId);
	}
	
	/**
	 * 更新场次信息
	 * @author xuchangjian 2017年6月26日下午2:07:58
	 * @param playRound
	 * @return
	 */
	@RequestMapping("/updateRound")
	public Object updateRound(@RequestBody PlayRoundDto playRound)
	{
		this.playRoundService.updateRoundByPlayRoundDto(playRound);
		return null;
	}
	
	/**
	 * 查询场次信息中所有下拉信息
	 * @author xuchangjian 2017年6月26日下午4:17:33
	 * @return
	 */
	@RequestMapping("/queryAllDropDownList")
	public Object queryAllDropDownList()
	{
		return this.playRoundService.queryAllDropDownList();
	}
	
	/**
	 * 查询所有场次信息列表
	 * @author xuchangjian 2017年6月27日上午10:38:33
	 * @return
	 */
	@RequestMapping("/queryRoundList")
	public Object queryRoundList()
	{
		return this.playRoundService.queryRoundList(null);
	}
	
	/**
	 * 查询场次列表
	 * 返回的数据按照集次进行分组
	 * @author xuchangjian 2017年6月29日下午5:03:30
	 * @param seriesNoList 集次列表
	 * @return
	 */
	@RequestMapping("/querySeriesRoundList")
	public Object querySeriesRoundList(@RequestParam(value="seriesNoList[]", required=false) List<Integer> seriesNoList, String roleId, String propId, Integer pageSize, Integer currentPage)
	{
		return this.playRoundService.querySeriesRoundList(seriesNoList, roleId, propId, pageSize, currentPage);
	}
	
	/**
	 * 查询场次的统计信息
	 * @author xuchangjian 2017年7月3日上午9:27:16
	 * @return
	 */
	@RequestMapping("/queryRoundStatistic")
	public Object queryRoundStatistic(String roleId, String propId) {
		return this.playRoundService.queryRoundStatistic(roleId, propId);
	}
	
	/**
	 * 删除场次
	 * @author xuchangjian 2017年8月1日下午5:08:32
	 * @param id	场次ID
	 * @return
	 */
	@RequestMapping("/removeRound")
	public Object removeRound(String id)
	{
		List<String> idList = new ArrayList<String>();
		idList.add(id);
		this.playRoundService.removeBatchById(idList);
		return null;
	}
	
	/**
	 * 检查项目下是否有场次信息
	 * @author xuchangjian 2017年8月3日下午3:51:26
	 * @return
	 */
	@RequestMapping("/checkHasRound")
	public Object checkHasRound()
	{
		ProjectModel project = SessionUtil.getSessionProject();
		
		int roundCount = this.playRoundService.get("PlayRoundMapper.countProjectRound", project.getId());	//总场次数
		
		boolean hasRound = true;
		if (roundCount == 0)
		{
			hasRound = false;
		}
		
		return hasRound;
	}
}
